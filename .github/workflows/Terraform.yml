# name: 'Terraform'

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:

# permissions:
#   id-token: write
#   contents: read

# jobs:
#   terraform:
#     name: 'Terraform'
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [20.x]

#     defaults:
#       run:
#         shell: bash

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v4

#     - name: Set up Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}

#     - name: Install dependencies for frontend and server
#       run: npm install

#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
#         aws-region: ${{ secrets.REGION }}

#     - name: Terraform Init
#       run: terraform init
    
#     - name: Terraform Format
#       run: terraform fmt -check
    
#     - name: Terraform Plan
#       run: |
#         cd $GITHUB_WORKSPACE/Terraform
#         terraform init
#         terraform plan -input=false

#     - name: Terraform Apply
#       run: |
#         cd $GITHUB_WORKSPACE/Terraform
#         terraform apply -auto-approve -input=false
#       env:
#         REGION: ${{ secrets.REGION }}
#         COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
#         COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
