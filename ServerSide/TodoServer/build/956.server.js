"use strict";exports.id=956,exports.ids=[956],exports.modules={8956:(e,t,n)=>{n.d(t,{getDefaultRoleAssumer:()=>an,getDefaultRoleAssumerWithWebIdentity:()=>cn});var o=n(4546),s=n(8029),r=n(5299);const i={UseGlobalEndpoint:{type:"builtInParams",name:"useGlobalEndpoint"},UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}};class a extends r.ServiceException{constructor(e){super(e),Object.setPrototypeOf(this,a.prototype)}}class c extends a{constructor(e){super({name:"ExpiredTokenException",$fault:"client",...e}),this.name="ExpiredTokenException",this.$fault="client",Object.setPrototypeOf(this,c.prototype)}}class d extends a{constructor(e){super({name:"MalformedPolicyDocumentException",$fault:"client",...e}),this.name="MalformedPolicyDocumentException",this.$fault="client",Object.setPrototypeOf(this,d.prototype)}}class l extends a{constructor(e){super({name:"PackedPolicyTooLargeException",$fault:"client",...e}),this.name="PackedPolicyTooLargeException",this.$fault="client",Object.setPrototypeOf(this,l.prototype)}}class u extends a{constructor(e){super({name:"RegionDisabledException",$fault:"client",...e}),this.name="RegionDisabledException",this.$fault="client",Object.setPrototypeOf(this,u.prototype)}}class p extends a{constructor(e){super({name:"IDPRejectedClaimException",$fault:"client",...e}),this.name="IDPRejectedClaimException",this.$fault="client",Object.setPrototypeOf(this,p.prototype)}}class h extends a{constructor(e){super({name:"InvalidIdentityTokenException",$fault:"client",...e}),this.name="InvalidIdentityTokenException",this.$fault="client",Object.setPrototypeOf(this,h.prototype)}}class m extends a{constructor(e){super({name:"IDPCommunicationErrorException",$fault:"client",...e}),this.name="IDPCommunicationErrorException",this.$fault="client",Object.setPrototypeOf(this,m.prototype)}}class g extends a{constructor(e){super({name:"InvalidAuthorizationMessageException",$fault:"client",...e}),this.name="InvalidAuthorizationMessageException",this.$fault="client",Object.setPrototypeOf(this,g.prototype)}}const f=e=>({...e,...e.SecretAccessKey&&{SecretAccessKey:r.SENSITIVE_STRING}}),y=e=>({...e,...e.Credentials&&{Credentials:f(e.Credentials)}}),S=e=>({...e,...e.WebIdentityToken&&{WebIdentityToken:r.SENSITIVE_STRING}}),P=e=>({...e,...e.Credentials&&{Credentials:f(e.Credentials)}});var x=n(3498),E=n(9447);const v=async(e,t)=>{const n=re;let o;return o=Ne({...W(e,t),[ae]:de,[Ke]:ie}),se(t,n,"/",void 0,o)},w=async(e,t)=>{const n=re;let o;return o=Ne({...j(e,t),[ae]:pe,[Ke]:ie}),se(t,n,"/",void 0,o)},I=async(e,t)=>{if(e.statusCode>=300)return A(e,t);const n=await(0,x.parseXmlBody)(e.body,t);let o={};return o=L(n.AssumeRoleResult,t),{$metadata:ne(e),...o}},b=async(e,t)=>{if(e.statusCode>=300)return A(e,t);const n=await(0,x.parseXmlBody)(e.body,t);let o={};return o=G(n.AssumeRoleWithWebIdentityResult,t),{$metadata:ne(e),...o}},A=async(e,t)=>{const n={...e,body:await(0,x.parseXmlErrorBody)(e.body,t)},o=Ve(e,n.body);switch(o){case"ExpiredTokenException":case"com.amazonaws.sts#ExpiredTokenException":throw await C(n,t);case"MalformedPolicyDocument":case"com.amazonaws.sts#MalformedPolicyDocumentException":throw await $(n,t);case"PackedPolicyTooLarge":case"com.amazonaws.sts#PackedPolicyTooLargeException":throw await O(n,t);case"RegionDisabledException":case"com.amazonaws.sts#RegionDisabledException":throw await z(n,t);case"IDPRejectedClaim":case"com.amazonaws.sts#IDPRejectedClaimException":throw await k(n,t);case"InvalidIdentityToken":case"com.amazonaws.sts#InvalidIdentityTokenException":throw await T(n,t);case"IDPCommunicationError":case"com.amazonaws.sts#IDPCommunicationErrorException":throw await R(n,t);case"InvalidAuthorizationMessageException":case"com.amazonaws.sts#InvalidAuthorizationMessageException":throw await D(n,t);default:const s=n.body;return oe({output:e,parsedBody:s.Error,errorCode:o})}},C=async(e,t)=>{const n=e.body,o=Z(n.Error,t),s=new c({$metadata:ne(e),...o});return(0,r.decorateServiceException)(s,n)},R=async(e,t)=>{const n=e.body,o=_(n.Error,t),s=new m({$metadata:ne(e),...o});return(0,r.decorateServiceException)(s,n)},k=async(e,t)=>{const n=e.body,o=X(n.Error,t),s=new p({$metadata:ne(e),...o});return(0,r.decorateServiceException)(s,n)},D=async(e,t)=>{const n=e.body,o=J(n.Error,t),s=new g({$metadata:ne(e),...o});return(0,r.decorateServiceException)(s,n)},T=async(e,t)=>{const n=e.body,o=Y(n.Error,t),s=new h({$metadata:ne(e),...o});return(0,r.decorateServiceException)(s,n)},$=async(e,t)=>{const n=e.body,o=Q(n.Error,t),s=new d({$metadata:ne(e),...o});return(0,r.decorateServiceException)(s,n)},O=async(e,t)=>{const n=e.body,o=ee(n.Error,t),s=new l({$metadata:ne(e),...o});return(0,r.decorateServiceException)(s,n)},z=async(e,t)=>{const n=e.body,o=te(n.Error,t),s=new u({$metadata:ne(e),...o});return(0,r.decorateServiceException)(s,n)},W=(e,t)=>{const n={};if(null!=e[Re]&&(n[Re]=e[Re]),null!=e[ke]&&(n[ke]=e[ke]),null!=e[ve]){const o=H(e[ve],t);0===e[ve]?.length&&(n.PolicyArns=[]),Object.entries(o).forEach((([e,t])=>{n[`PolicyArns.${e}`]=t}))}if(null!=e[Ee]&&(n[Ee]=e[Ee]),null!=e[ye]&&(n[ye]=e[ye]),null!=e[We]){const o=N(e[We],t);0===e[We]?.length&&(n.Tags=[]),Object.entries(o).forEach((([e,t])=>{n[`Tags.${e}`]=t}))}if(null!=e[He]){const o=U(e[He],t);0===e[He]?.length&&(n.TransitiveTagKeys=[]),Object.entries(o).forEach((([e,t])=>{n[`TransitiveTagKeys.${e}`]=t}))}if(null!=e[Pe]&&(n[Pe]=e[Pe]),null!=e[Oe]&&(n[Oe]=e[Oe]),null!=e[je]&&(n[je]=e[je]),null!=e[$e]&&(n[$e]=e[$e]),null!=e[Ie]){const o=M(e[Ie],t);0===e[Ie]?.length&&(n.ProvidedContexts=[]),Object.entries(o).forEach((([e,t])=>{n[`ProvidedContexts.${e}`]=t}))}return n},j=(e,t)=>{const n={};if(null!=e[Re]&&(n[Re]=e[Re]),null!=e[ke]&&(n[ke]=e[ke]),null!=e[Me]&&(n[Me]=e[Me]),null!=e[be]&&(n[be]=e[be]),null!=e[ve]){const o=H(e[ve],t);0===e[ve]?.length&&(n.PolicyArns=[]),Object.entries(o).forEach((([e,t])=>{n[`PolicyArns.${e}`]=t}))}return null!=e[Ee]&&(n[Ee]=e[Ee]),null!=e[ye]&&(n[ye]=e[ye]),n},H=(e,t)=>{const n={};let o=1;for(const s of e){if(null===s)continue;const e=K(s,t);Object.entries(e).forEach((([e,t])=>{n[`member.${o}.${e}`]=t})),o++}return n},K=(e,t)=>{const n={};return null!=e[Fe]&&(n[Fe]=e[Fe]),n},q=(e,t)=>{const n={};return null!=e[we]&&(n[we]=e[we]),null!=e[fe]&&(n[fe]=e[fe]),n},M=(e,t)=>{const n={};let o=1;for(const t of e){if(null===t)continue;const e=q(t);Object.entries(e).forEach((([e,t])=>{n[`member.${o}.${e}`]=t})),o++}return n},F=(e,t)=>{const n={};return null!=e[xe]&&(n[xe]=e[xe]),null!=e[qe]&&(n[qe]=e[qe]),n},U=(e,t)=>{const n={};let o=1;for(const t of e)null!==t&&(n[`member.${o}`]=t,o++);return n},N=(e,t)=>{const n={};let o=1;for(const t of e){if(null===t)continue;const e=F(t);Object.entries(e).forEach((([e,t])=>{n[`member.${o}.${e}`]=t})),o++}return n},V=(e,t)=>{const n={};return null!=e[le]&&(n[le]=(0,r.expectString)(e[le])),null!=e[he]&&(n[he]=(0,r.expectString)(e[he])),n},L=(e,t)=>{const n={};return null!=e[ge]&&(n[ge]=B(e[ge],t)),null!=e[ue]&&(n[ue]=V(e[ue])),null!=e[Ae]&&(n[Ae]=(0,r.strictParseInt32)(e[Ae])),null!=e[$e]&&(n[$e]=(0,r.expectString)(e[$e])),n},G=(e,t)=>{const n={};return null!=e[ge]&&(n[ge]=B(e[ge],t)),null!=e[Te]&&(n[Te]=(0,r.expectString)(e[Te])),null!=e[ue]&&(n[ue]=V(e[ue])),null!=e[Ae]&&(n[Ae]=(0,r.strictParseInt32)(e[Ae])),null!=e[Ce]&&(n[Ce]=(0,r.expectString)(e[Ce])),null!=e[me]&&(n[me]=(0,r.expectString)(e[me])),null!=e[$e]&&(n[$e]=(0,r.expectString)(e[$e])),n},B=(e,t)=>{const n={};return null!=e[ce]&&(n[ce]=(0,r.expectString)(e[ce])),null!=e[De]&&(n[De]=(0,r.expectString)(e[De])),null!=e[ze]&&(n[ze]=(0,r.expectString)(e[ze])),null!=e[Se]&&(n[Se]=(0,r.expectNonNull)((0,r.parseRfc3339DateTimeWithOffset)(e[Se]))),n},Z=(e,t)=>{const n={};return null!=e[Ue]&&(n[Ue]=(0,r.expectString)(e[Ue])),n},_=(e,t)=>{const n={};return null!=e[Ue]&&(n[Ue]=(0,r.expectString)(e[Ue])),n},X=(e,t)=>{const n={};return null!=e[Ue]&&(n[Ue]=(0,r.expectString)(e[Ue])),n},J=(e,t)=>{const n={};return null!=e[Ue]&&(n[Ue]=(0,r.expectString)(e[Ue])),n},Y=(e,t)=>{const n={};return null!=e[Ue]&&(n[Ue]=(0,r.expectString)(e[Ue])),n},Q=(e,t)=>{const n={};return null!=e[Ue]&&(n[Ue]=(0,r.expectString)(e[Ue])),n},ee=(e,t)=>{const n={};return null!=e[Ue]&&(n[Ue]=(0,r.expectString)(e[Ue])),n},te=(e,t)=>{const n={};return null!=e[Ue]&&(n[Ue]=(0,r.expectString)(e[Ue])),n},ne=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),oe=(0,r.withBaseException)(a),se=async(e,t,n,o,s)=>{const{hostname:r,protocol:i="https",port:a,path:c}=await e.endpoint(),d={protocol:i,hostname:r,port:a,method:"POST",path:c.endsWith("/")?c.slice(0,-1)+n:c+n,headers:t};return void 0!==o&&(d.hostname=o),void 0!==s&&(d.body=s),new E.HttpRequest(d)},re={"content-type":"application/x-www-form-urlencoded"},ie="2011-06-15",ae="Action",ce="AccessKeyId",de="AssumeRole",le="AssumedRoleId",ue="AssumedRoleUser",pe="AssumeRoleWithWebIdentity",he="Arn",me="Audience",ge="Credentials",fe="ContextAssertion",ye="DurationSeconds",Se="Expiration",Pe="ExternalId",xe="Key",Ee="Policy",ve="PolicyArns",we="ProviderArn",Ie="ProvidedContexts",be="ProviderId",Ae="PackedPolicySize",Ce="Provider",Re="RoleArn",ke="RoleSessionName",De="SecretAccessKey",Te="SubjectFromWebIdentityToken",$e="SourceIdentity",Oe="SerialNumber",ze="SessionToken",We="Tags",je="TokenCode",He="TransitiveTagKeys",Ke="Version",qe="Value",Me="WebIdentityToken",Fe="arn",Ue="message",Ne=e=>Object.entries(e).map((([e,t])=>(0,r.extendedEncodeURIComponent)(e)+"="+(0,r.extendedEncodeURIComponent)(t))).join("&"),Ve=(e,t)=>void 0!==t.Error?.Code?t.Error.Code:404==e.statusCode?"NotFound":void 0;class Le extends(r.Command.classBuilder().ep({...i}).m((function(e,t,n,r){return[(0,s.TM)(n,this.serialize,this.deserialize),(0,o.rD)(n,e.getEndpointParameterInstructions())]})).s("AWSSecurityTokenServiceV20110615","AssumeRole",{}).n("STSClient","AssumeRoleCommand").f(void 0,y).ser(v).de(I).build()){}class Ge extends(r.Command.classBuilder().ep({...i}).m((function(e,t,n,r){return[(0,s.TM)(n,this.serialize,this.deserialize),(0,o.rD)(n,e.getEndpointParameterInstructions())]})).s("AWSSecurityTokenServiceV20110615","AssumeRoleWithWebIdentity",{}).n("STSClient","AssumeRoleWithWebIdentityCommand").f(S,P).ser(w).de(b).build()){}const Be="us-east-1",Ze=async(e,t,n)=>{const o="function"==typeof e?await e():e,s="function"==typeof t?await t():t;return n?.debug?.("@aws-sdk/client-sts::resolveRegion","accepting first of:",`${o} (provider)`,`${s} (parent client)`,`${Be} (STS default)`),o??s??Be};var _e=n(1758),Xe=n(6170),Je=n(6692),Ye=n(3202),Qe=n(512),et=n(7250),tt=n(1320),nt=n(2103),ot=n(2952);const st=async(e,t,n)=>({operation:(0,ot.u)(t).operation,region:await(0,ot.t)(e.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()}),rt=e=>{const t=[];switch(e.operation){case"AssumeRoleWithSAML":case"AssumeRoleWithWebIdentity":t.push({schemeId:"smithy.api#noAuth"});break;default:t.push(function(e){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"sts",region:e.region},propertiesExtractor:(e,t)=>({signingProperties:{config:e,context:t}})}}(e))}return t};var it=n(4054),at=n(1449),ct=n(5708),dt=n(8520),lt=n(6118),ut=n(8226),pt=n(4134),ht=n(2640),mt=n(563),gt=n(7670),ft=n(6775),yt=n(6954);const St="required",Pt="type",xt="fn",Et="argv",vt="ref",wt=!1,It=!0,bt="booleanEquals",At="stringEquals",Ct="sigv4",Rt="us-east-1",kt="endpoint",Dt="https://sts.{Region}.{PartitionResult#dnsSuffix}",Tt="tree",$t="error",Ot="getAttr",zt={[St]:!1,[Pt]:"String"},Wt={[St]:!0,default:!1,[Pt]:"Boolean"},jt={[vt]:"Endpoint"},Ht={[xt]:"isSet",[Et]:[{[vt]:"Region"}]},Kt={[vt]:"Region"},qt={[xt]:"aws.partition",[Et]:[Kt],assign:"PartitionResult"},Mt={[vt]:"UseFIPS"},Ft={[vt]:"UseDualStack"},Ut={url:"https://sts.amazonaws.com",properties:{authSchemes:[{name:Ct,signingName:"sts",signingRegion:Rt}]},headers:{}},Nt={},Vt={conditions:[{[xt]:At,[Et]:[Kt,"aws-global"]}],[kt]:Ut,[Pt]:kt},Lt={[xt]:bt,[Et]:[Mt,!0]},Gt={[xt]:bt,[Et]:[Ft,!0]},Bt={[xt]:Ot,[Et]:[{[vt]:"PartitionResult"},"supportsFIPS"]},Zt={[vt]:"PartitionResult"},_t={[xt]:bt,[Et]:[!0,{[xt]:Ot,[Et]:[Zt,"supportsDualStack"]}]},Xt=[{[xt]:"isSet",[Et]:[jt]}],Jt=[Lt],Yt=[Gt],Qt={version:"1.0",parameters:{Region:zt,UseDualStack:Wt,UseFIPS:Wt,Endpoint:zt,UseGlobalEndpoint:Wt},rules:[{conditions:[{[xt]:bt,[Et]:[{[vt]:"UseGlobalEndpoint"},It]},{[xt]:"not",[Et]:Xt},Ht,qt,{[xt]:bt,[Et]:[Mt,wt]},{[xt]:bt,[Et]:[Ft,wt]}],rules:[{conditions:[{[xt]:At,[Et]:[Kt,"ap-northeast-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"ap-south-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"ap-southeast-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"ap-southeast-2"]}],endpoint:Ut,[Pt]:kt},Vt,{conditions:[{[xt]:At,[Et]:[Kt,"ca-central-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"eu-central-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"eu-north-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"eu-west-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"eu-west-2"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"eu-west-3"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"sa-east-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,Rt]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"us-east-2"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"us-west-1"]}],endpoint:Ut,[Pt]:kt},{conditions:[{[xt]:At,[Et]:[Kt,"us-west-2"]}],endpoint:Ut,[Pt]:kt},{endpoint:{url:Dt,properties:{authSchemes:[{name:Ct,signingName:"sts",signingRegion:"{Region}"}]},headers:Nt},[Pt]:kt}],[Pt]:Tt},{conditions:Xt,rules:[{conditions:Jt,error:"Invalid Configuration: FIPS and custom endpoint are not supported",[Pt]:$t},{conditions:Yt,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",[Pt]:$t},{endpoint:{url:jt,properties:Nt,headers:Nt},[Pt]:kt}],[Pt]:Tt},{conditions:[Ht],rules:[{conditions:[qt],rules:[{conditions:[Lt,Gt],rules:[{conditions:[{[xt]:bt,[Et]:[It,Bt]},_t],rules:[{endpoint:{url:"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:Nt,headers:Nt},[Pt]:kt}],[Pt]:Tt},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",[Pt]:$t}],[Pt]:Tt},{conditions:Jt,rules:[{conditions:[{[xt]:bt,[Et]:[Bt,It]}],rules:[{conditions:[{[xt]:At,[Et]:[{[xt]:Ot,[Et]:[Zt,"name"]},"aws-us-gov"]}],endpoint:{url:"https://sts.{Region}.amazonaws.com",properties:Nt,headers:Nt},[Pt]:kt},{endpoint:{url:"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}",properties:Nt,headers:Nt},[Pt]:kt}],[Pt]:Tt},{error:"FIPS is enabled but this partition does not support FIPS",[Pt]:$t}],[Pt]:Tt},{conditions:Yt,rules:[{conditions:[_t],rules:[{endpoint:{url:"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:Nt,headers:Nt},[Pt]:kt}],[Pt]:Tt},{error:"DualStack is enabled but this partition does not support DualStack",[Pt]:$t}],[Pt]:Tt},Vt,{endpoint:{url:Dt,properties:Nt,headers:Nt},[Pt]:kt}],[Pt]:Tt}],[Pt]:Tt},{error:"Invalid Configuration: Missing Region",[Pt]:$t}]},en=(e,t={})=>(0,yt.sO)(Qt,{endpointParams:e,logger:t.logger});yt.mw.aws=ft.UF;var tn=n(2165);var nn=n(3119);const on=e=>{const t=e.httpAuthSchemes;let n=e.httpAuthSchemeProvider,o=e.credentials;return{setHttpAuthScheme(e){const n=t.findIndex((t=>t.schemeId===e.schemeId));-1===n?t.push(e):t.splice(n,1,e)},httpAuthSchemes:()=>t,setHttpAuthSchemeProvider(e){n=e},httpAuthSchemeProvider:()=>n,setCredentials(e){o=e},credentials:()=>o}};class sn extends r.Client{constructor(...[e]){const t=(n=(e=>{(0,r.emitWarningIfUnsupportedVersion)(process.version);const t=(0,tn.I)(e),n=()=>t().then(r.loadConfigsForDefaultMode),o=(e=>({apiVersion:"2011-06-15",base64Decoder:e?.base64Decoder??mt.E,base64Encoder:e?.base64Encoder??mt.n,disableHostPrefix:e?.disableHostPrefix??!1,endpointProvider:e?.endpointProvider??en,extensions:e?.extensions??[],httpAuthSchemeProvider:e?.httpAuthSchemeProvider??rt,httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4"),signer:new x.AwsSdkSigV4Signer},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new et.NoAuthSigner}],logger:e?.logger??new r.NoOpLogger,serviceId:e?.serviceId??"STS",urlParser:e?.urlParser??ht.D,utf8Decoder:e?.utf8Decoder??gt.ar,utf8Encoder:e?.utf8Encoder??gt.Pq}))(e);return(0,x.emitWarningIfUnsupportedVersion)(process.version),{...o,...e,runtime:"node",defaultsMode:t,bodyLengthChecker:e?.bodyLengthChecker??ut.n,credentialDefaultProvider:e?.credentialDefaultProvider??it.v6,defaultUserAgentProvider:e?.defaultUserAgentProvider??(0,at.mJ)({serviceId:o.serviceId,clientVersion:"3.583.0"}),httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4")||(async e=>await(0,it.v6)(e?.__config||{})()),signer:new x.AwsSdkSigV4Signer},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new et.NoAuthSigner}],maxAttempts:e?.maxAttempts??(0,dt.Z)(nt.qs),region:e?.region??(0,dt.Z)(Qe.GG,Qe.zH),requestHandler:lt.$c.create(e?.requestHandler??n),retryMode:e?.retryMode??(0,dt.Z)({...nt.kN,default:async()=>(await n()).retryMode||pt.L0}),sha256:e?.sha256??ct.V.bind(null,"sha256"),streamCollector:e?.streamCollector??lt.kv,useDualstackEndpoint:e?.useDualstackEndpoint??(0,dt.Z)(Qe.e$),useFipsEndpoint:e?.useFipsEndpoint??(0,dt.Z)(Qe.Ko)}})(e||{}),{...n,useDualstackEndpoint:n.useDualstackEndpoint??!1,useFipsEndpoint:n.useFipsEndpoint??!1,useGlobalEndpoint:n.useGlobalEndpoint??!1,defaultSigningName:"sts"});var n;const s=(0,Qe.TD)(t),i=(0,o.Co)(s),a=(0,nt.$z)(i),c=(0,_e.OV)(a),d=((e,t)=>{const n={...(0,nn.Rq)(e),...(0,r.getDefaultExtensionConfiguration)(e),...(0,E.getHttpHandlerExtensionConfiguration)(e),...on(e)};return t.forEach((e=>e.configure(n))),{...e,...(0,nn.$3)(n),...(0,r.resolveDefaultRuntimeConfig)(n),...(0,E.resolveHttpHandlerRuntimeConfig)(n),...(o=n,{httpAuthSchemes:o.httpAuthSchemes(),httpAuthSchemeProvider:o.httpAuthSchemeProvider(),credentials:o.credentials()})};var o})((e=>{const t=(n=e,{...n,stsClientCtor:sn});var n;return{...(0,x.resolveAwsSdkSigV4Config)(t)}})((0,Ye.Dc)(c)),e?.extensions||[]);super(d),this.config=d,this.middlewareStack.use((0,nt.ey)(this.config)),this.middlewareStack.use((0,tt.vK)(this.config)),this.middlewareStack.use((0,_e.TC)(this.config)),this.middlewareStack.use((0,Xe.Y7)(this.config)),this.middlewareStack.use((0,Je.n4)(this.config)),this.middlewareStack.use((0,Ye.sM)(this.config)),this.middlewareStack.use((0,et.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config,{httpAuthSchemeParametersProvider:this.getDefaultHttpAuthSchemeParametersProvider(),identityProviderConfigProvider:this.getIdentityProviderConfigProvider()})),this.middlewareStack.use((0,et.getHttpSigningPlugin)(this.config))}destroy(){super.destroy()}getDefaultHttpAuthSchemeParametersProvider(){return st}getIdentityProviderConfigProvider(){return async e=>new et.DefaultIdentityProviderConfig({"aws.auth#sigv4":e.credentials})}}const rn=(e,t)=>t?class extends e{constructor(e){super(e);for(const e of t)this.middlewareStack.use(e)}}:e,an=(e={},t)=>((e,t)=>{let n,o;return async(s,r)=>{if(o=s,!n){const{logger:s=e?.parentClientConfig?.logger,region:r,requestHandler:i=e?.parentClientConfig?.requestHandler,credentialProviderLogger:a}=e,c=await Ze(r,e?.parentClientConfig?.region,a);n=new t({credentialDefaultProvider:()=>async()=>o,region:c,requestHandler:i,logger:s})}const{Credentials:i}=await n.send(new Le(r));if(!i||!i.AccessKeyId||!i.SecretAccessKey)throw new Error(`Invalid response from STS.assumeRole call with role ${r.RoleArn}`);return{accessKeyId:i.AccessKeyId,secretAccessKey:i.SecretAccessKey,sessionToken:i.SessionToken,expiration:i.Expiration,credentialScope:i.CredentialScope}}})(e,rn(sn,t)),cn=(e={},t)=>((e,t)=>{let n;return async o=>{if(!n){const{logger:o=e?.parentClientConfig?.logger,region:s,requestHandler:r=e?.parentClientConfig?.requestHandler,credentialProviderLogger:i}=e,a=await Ze(s,e?.parentClientConfig?.region,i);n=new t({region:a,requestHandler:r,logger:o})}const{Credentials:s}=await n.send(new Ge(o));if(!s||!s.AccessKeyId||!s.SecretAccessKey)throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${o.RoleArn}`);return{accessKeyId:s.AccessKeyId,secretAccessKey:s.SecretAccessKey,sessionToken:s.SessionToken,expiration:s.Expiration,credentialScope:s.CredentialScope}}})(e,rn(sn,t))}};